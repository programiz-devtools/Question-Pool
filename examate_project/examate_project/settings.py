"""
Django settings for examate_project project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

from datetime import timedelta


from dotenv import load_dotenv
import os
import logging

LOGLEVEL = os.environ.get("ENV_LOG_LEVEL", "info").upper()
DJANGO_SERVER = "django.server"
BASE_DIR = Path(__file__).resolve().parent.parent
from django.utils.log import DEFAULT_LOGGING


# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv() 


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-9p0n-(sk7e*)nz+wqld01qb54xm_nyq(bycpz&@e#xciqmxymc"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', True)

MEDIA_URL = os.getenv("MEDIA_URL")

MEDIA_ROOT = os.getenv('MEDIA_ROOT')

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'daphne',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'user_management',
    'question_management',
    'subject_management',
    'organization_management',
    'exam_management',
    'candidatemanagement',
    'examanswers_management',
    'chat_management',
    'ticket_management',
    'rest_framework.authtoken',
    'rest_framework_simplejwt',
    'django_filters',
     "corsheaders",
     'fcm_django',
     'transaction_management',
      'channels',
]

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
}

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]


CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
]

EMAIL_BACKEND = os.getenv('EMAIL_BACKEND','')
EMAIL_HOST = os.getenv('EMAIL_HOST','')
EMAIL_USE_TLS =bool(os.getenv('EMAIL_USE_TLS'))
EMAIL_PORT =int(os.getenv('EMAIL_PORT',0))
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER','')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD','')

DEFAULT_FROM_EMAIL =os.getenv('DEFAULT_FROM_EMAIL','')


ROOT_URLCONF = 'examate_project.urls'
EXAM_ACCESS_LINK_URL=os.getenv('EXAM_ACCESS_LINK_URL','')
PROFILE_IMAGE_URL=os.getenv("PROFILE_IMAGE_URL")

REDIS_HOST = os.getenv("REDIS_HOST", "redis://127.0.0.1:6379/0")

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "examate_project.wsgi.application"
ASGI_APPLICATION = "examate_project.asgi.application"

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_NAME',''),
        'USER': os.getenv('DB_USERNAME',''),
        'PASSWORD':os.getenv('DB_PASSWORD',''),
        'HOST': os.getenv('DB_HOST',''),  
        'PORT': os.getenv('DB_PORT',''),
    }
}


CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [(REDIS_HOST)],
        },
    },
}




AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

AUTH_USER_MODEL = "user_management.User"

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        "rest_framework.authentication.TokenAuthentication",
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
    "DEFAULT_FILTER_BACKENDS": ["django_filters.rest_framework.DjangoFilterBackend"],
}
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
OPTION_LIMIT = int(os.environ.get("OPTION_LIMIT", 20))
EXAM_ACCESS_LINK_URL = os.environ.get(
    "EXAM_ACCESS_LINK_URL",
)
from datetime import datetime


def get_log_filename():
    today = datetime.now().strftime("%Y-%m-%d")
    return f"examate_{today}.log"


# Define log filename
LOG_FILENAME = get_log_filename()

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': os.path.join(BASE_DIR,LOG_FILENAME),
            'when': 'H',
            'interval': 24,
            'backupCount': 3,
            'formatter': 'standard',
        },
    },
    'loggers': {
        '': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
    },
    'formatters': {
        'standard': {
            'format': '%(asctime)s [%(levelname)s] %(message)s',
        },

    }}

FCM_SERVER_KEY= "AAAAR3rsE5A:APA91bFW4GOv6BzNuK2R2eiLT8UCATKae9JzeAkqa22sRIpzGPKT6vR-4ddk7SR4PooC9hB39Iegq5gbQophfxRkObiZfbIngPUjabXtYmnJ9w8el5kSgNWz7NJr4RyQYoZ0abluEoZr"

STRIPE_SECRET_KEY='sk_test_51P7846SEIva9P6yJZiK7LwzvvPLaN4B1O2Js1udncl8OjXhlQbLiSTI3bt2zsUaZNU0PviECtPPQ7vKlst2Wcm9e00vuSsQr9S'